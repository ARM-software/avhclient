name: Docker
on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    paths:
      - '.github/workflows/docker.yml'
      - 'docker/.hadolint.yaml'
      - 'docker/**/*'
jobs:
  lint:
    name: Run Hadolint checks
    if: ${{ github.event.action != 'closed' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3

      - uses: hadolint/hadolint-action@v2.1.0
        with:
          dockerfile: docker/Dockerfile
          config: docker/.hadolint.yaml

  build:
    name: Build Docker image
    if: ${{ github.event.action != 'closed' }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Retrieve version
        id: version
        run: |
          echo "::set-output name=label::$(python -m setup -V)"
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "::set-output name=tag::pr-${{github.event.pull_request.number}}"
          else
            echo "::set-output name=tag::${{ github.ref_name }}"
          fi

      - name: docker build and push
        uses: docker/build-push-action@v2
        with:
          context: docker
          build-args: "GIT_VERSION=${{ github.sha }}"
          push: true
          tags: ghcr.io/arm-software/avhclient:${{ steps.version.outputs.tag }}
          labels: |
            org.opencontainers.image.version="${{ steps.version.outputs.label }}"
            org.opencontainers.image.revision="${{ github.sha }}"

      - name: Inspect image
        run: docker run --rm ghcr.io/arm-software/avhclient:${{ steps.version.outputs.tag }} apk list -I | tee LICENSES.txt

      - uses: actions/upload-artifact@v3
        with:
          name: LICENSES
          path: LICENSES.txt

  test:
    name: Test Docker image
    if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
    runs-on: ubuntu-latest
    container: ghcr.io/arm-software/avhclient:pr-${{github.event.pull_request.number}}
    needs: build
    timeout-minutes: 15
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
      AWS_IAM_PROFILE: ${{ secrets.AWS_IAM_PROFILE }}
      AWS_SECURITY_GROUP_ID: ${{ secrets.AWS_SECURITY_GROUP_ID }}
      AWS_SUBNET_ID: ${{ secrets.AWS_SUBNET_ID }}
    steps:
      - run: |
          rc=0
          name="${{ github.repository }}-${{ github.run_id }}"
          avhclient --instance-name ${name} prepare
          avhclient --instance-name ${name} run --cmds "~/tool-inventory.sh"; rc=$?
          avhclient --instance-name ${name} cleanup
          exit $rc

  prune:
    name: Prune Docker image
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Delete image
        uses: bots-house/ghcr-delete-image-action@v1.0.1
        with:
          owner: ${{ github.repository_owner }}
          name: arm-software/avhclient
          token: ${{ github.token }}
          tag: pr-${{github.event.pull_request.number}}
          untagged-older-than: 1
